* Description
  A simple dashboard that visualizes 'Mental Health in the Tech Workplace in 2014' survey results.

* Dependencies
** yarn
  [[https://yarnpkg.com/en/docs/install#mac-stable][installation guide]] 
  
* Components
  Application consists of two pages, user can use links on header to navigate between.
  
** Top Level <App>
   Responsible for fetching survey data and providing it to the pages. That way we don't have to refetch between page transitions.
   
*** Component State
    - Fetch limit (controlled by the dropdown on the navigation bar)
   
** Navigation Bar
   - Provides links to pages documented below.
   - Has a dropdown element to choose amount of entries to display.

** Overview Page
*** Component State
    - Chart Property Selection
      - property to be displayed and associated transformation function

*** Main Chart
**** X-Axis
     Countries
**** Y-Axis
     - Number of survey entries
     - Ages
     - Gender
     - Family History
     - Seek Treatment
**** Next Steps
     - As a next step, instead of defining dataKeys in the code, they should be extracted from the transformed data itself.
     - A small description of the selected property would be helpful for users.
     - Yes / No categories can be normalized to 1 and shown as percentages. Viewing distribution could be more useful without the envelope of participation amount.

** Details Page
*** Component State
    - Country
    - Number of employees

*** Charts
**** Comparison of Have Benefits vs. No Benefits
     Bar Chart with Composite Axis
***** X-Axis
       - Have Benefits
         - Discuss with coworkers
         - Discuss with supervisor
       - No Benefits
         - Discuss with coworkers
         - Discuss with supervisor
***** Y-Axis
      Percentage of people answered yes 

**** Tech vs No Tech
     Simple Bar chart
***** X-Axis
      - Tech
      - No Tech
***** Y-Axis
      - Percentage of care options available
**** People who have sought help by age distribution
     Bar Chart
***** X-Axis
      - Age group   
***** Y-Axis
      - Sought Help / Didn't seek help
**** Correlation of Work interference vs. Sought Help
     Bar Chart
***** X-Axis
      - Work Interference
***** Y-Axis
      - Sought Help / Didn't seek help

* Technologies Used
** Next.js
   I have decided to build the application around next.js since it has very little overhead to start with, but provides great flexibility and preformance down the road.
   I had to utilize component state after data fetching to share results between pages on _app.jsx component, which is not ideal for server side rendering. If time would permit, a state management library like redux can be used to share state between pages as well as the server for better performance.
** React-select
   I have used react-select as a the dropdown component since it allows for multi-select and has an intiutive interface. Unfortunately new version has a fresh server side rendering issue which awaits to be resolved ([[https://github.com/JedWatson/react-select/issues/3590][github issue]]).
** Recharts
   I have decided to use recharts since it provides a good abstract over d3.js. d3.js has great tools for data visualization but for this context using an abtraction to solve common problems is a more efficient approach.
** Ramda
   I have decided to utilize ramda for data transformations since it has great affordance for composition and allow for clean functional programming patterns. 

* Time Spent
#+BEGIN: clocktable :scope subtree :maxlevel 2
#+CAPTION: Clock summary at [2019-06-05 Wed 23:00]
| Headline                                 | Time   |      |
|------------------------------------------+--------+------|
| *Total time*                             | *5:55* |      |
|------------------------------------------+--------+------|
| Time Spent                               | 5:55   |      |
| \_  Create Readme                        |        | 0:24 |
| \_  Bootstrap application                |        | 0:07 |
| \_  Create mock backend and implement... |        | 0:53 |
| \_  Add header component as layout       |        | 1:12 |
| \_  Implement overview page chart        |        | 1:08 |
| \_  Sanitize and catagorize data         |        | 0:35 |
| \_  Allow users to interact with the...  |        | 1:11 |
| \_  Refactor distribution extraction     |        | 0:25 |
#+END:

* Resources
** Survey: [[https://www.kaggle.com/osmi/mental-health-in-tech-survey/data][dataset on Kaggle]]
** Convert cvs to json: [[https://csvjson.com/csv2json][cvsjson web app]]
